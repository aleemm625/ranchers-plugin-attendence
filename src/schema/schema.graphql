
type AccountNew {
  "The account ID"
  _id: ID

  "A list of physical or mailing addresses associated with this account"
  addressBook(
    "Return only results that come after this cursor. Use this with `first` to specify the number of results to return."
    after: ConnectionCursor

    "Return only results that come before this cursor. Use this with `last` to specify the number of results to return."
    before: ConnectionCursor

    "Return at most this many results. This parameter may be used with either `after` or `offset` parameters."
    first: ConnectionLimitInt

    "Return at most this many results. This parameter may be used with the `before` parameter."
    last: ConnectionLimitInt

    "Return only results that come after the Nth result. This parameter may be used with the `first` parameter."
    offset: Int
  ): AddressConnection

  "A list of shops this user can administer with the admin UI"
  adminUIShops: [Shop]

  "Bio to display on profile"
  bio: String

  "branch Info Displayed"
  branchInfo: [Branch]

  "The date and time at which this account was created"
  createdAt: DateTime!

  "The preferred currency used by this account"
  currency: Currency

  "A list of email records associated with this account"
  emailRecords: [EmailRecord]

  "The first name of the person this account represents, if known"
  firstName: String
  UserRole: UserRoleValue
  "The preferred language used by this account"
  language: String

  "The last name of the person this account represents, if known"
  lastName: String

  currentStatus: String
  "Arbitrary additional metadata about this account"
  metafields: [Metafield]

  "The full name of the person this account represents, if known"
  name: String

  "Some note about this account"
  note: String

  "URL of picture to display on profile"
  picture: String

  "An object storing plugin-specific preferences for this account"
  preferences: JSONObject

  """
  The primary email address for the account. This matches the address in `emailRecords` where `provides` is `default`.
  """
  primaryEmailAddress: Email

  "The date and time at which this account was last updated"
  updatedAt: DateTime

  "The Identity user ID with which this account is associated"
  userId: String

  "Username"
  username: String

  phone: String
}
type activity {
  _id: ID
  id: ID
  activity: activityStatuses
  time: DateTime
  duration: String
  reason: String
  Notes: String
  riderInfo: AccountNew
  # customerOrderInfo:customerOrderInfoPayload
}
enum activityStatuses {
  In-Branch
  Out-Branch
  Delivery
  Other
}
type Mutation {
  saveActivityData(
    activity: activityStatuses
    time: DateTime
    duration: String
    reason: String
    ): activity
}
# enum OrderReportSortBy {
#   startTime
#   createdAt
#   updatedAt
# }
type Query {
  getAttendenceReport(): [activity]
}
